{
    "swagger": "2.0",
    "info": {
        "description": "# API Builder Console API\nThis is the documentation for the API used by [arrow-admin-ui](https://www.npmjs.com/package/arrow-admin-ui)\n\n## Change Log\n\n### 1.0\n- Initial Release\n",
        "version": "1.0",
        "title": "API Builder Console API"
    },
    "host": "localhost",
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "paths": {
        "/apis/summary": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GroupSummary"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getGroupSummaries",
                "tags": [
                    "apis"
                ],
                "summary": "Gets an array of API group summaries"
            }
        },
        "/apis/{group}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/API"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getGroupEndpoints",
                "tags": [
                    "apis"
                ],
                "summary": "Gets an array of Endpoints for a group.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group",
                        "type": "string",
                        "description": "API group to filter by.",
                        "required": true
                    }
                ]
            }
        },
        "/codeblocks": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Codeblock"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getCodeblocks",
                "tags": [
                    "codeblock"
                ],
                "summary": "Gets an array of Codeblocks."
            }
        },
        "/codeblocks/{name}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Codeblock"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getCodeblockByName",
                "tags": [
                    "codeblock"
                ],
                "summary": "Gets the specified codeblock.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "type": "string",
                        "description": "Name of codeblock to retrieve.",
                        "required": true
                    }
                ]
            }
        },
        "/config": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServerConfiguration"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "listConfigs",
                "tags": [
                    "config"
                ],
                "summary": "Lists all the server configuration files.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "env",
                        "type": "string",
                        "description": "Limit the selection to a single environment."
                    }
                ]
            }
        },
        "/config/{name}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServerConfiguration"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getConfig",
                "tags": [
                    "config"
                ],
                "summary": "Get the specified server configuration file.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "type": "string",
                        "description": "The name of the configuration file.",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "updateConfig",
                "tags": [
                    "config"
                ],
                "summary": "Update the configuration file.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "type": "string",
                        "description": "The name of the configuration file.",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The server configuration to save.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServerConfiguration"
                        }
                    }
                ]
            }
        },
        "/connectors": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Connector"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getConnectors",
                "tags": [
                    "connectors"
                ],
                "summary": "Gets an array of installed connectors"
            }
        },
        "/endpoints/generate": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Endpoint was created.",
                        "headers": {
                            "Location": {
                                "description": "The URL to the newly created endpoint.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "generateEndpoint",
                "tags": [
                    "endpoint"
                ],
                "summary": "Generate an endpoint.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "endpoint",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "model": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name for the endpoint."
                                },
                                "description": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Information for endpoint generation.",
                        "required": true
                    }
                ]
            }
        },
        "/endpoints/summary": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GroupSummary"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getEndpointSummaries",
                "tags": [
                    "endpoint"
                ],
                "summary": "Gets an array of Endpoint summaries."
            }
        },
        "/endpoints/{group}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Endpoints"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getEndpoints",
                "tags": [
                    "endpoint"
                ],
                "summary": "Gets an array of Endpoints.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group",
                        "type": "string",
                        "description": "API endpoint group to retrieve.",
                        "required": true
                    }
                ]
            }
        },
        "/flows/{flowId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getFlow",
                "tags": [
                    "flow"
                ],
                "summary": "Gets a flow.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "flowId",
                        "type": "string",
                        "description": "The flow to retrieve.",
                        "required": true
                    }
                ]
            }
        },
        "/logs": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LogEntry"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getLogs",
                "tags": [
                    "logging"
                ],
                "summary": "Gets an array of LogEntry.  If no records exist, then an empty array is returned.",
                "description": "The list can be filtered using the expression: field=__field__&op=__op__&value=__value__. Optionally, you can add a logical operation for all expressions, using the form: &lop=AND|OR. By default, the logical operation is AND. Multiple expression filters can be used, specifying field, op, and value for each filter. The field is one of:||value||description|||eq|Equal||ne|Not equal||gt|Greater than||lt|Less than||ge|Greater than or equal||le|Less than or equal||co|Contains|",
                "parameters": [
                    {
                        "in": "query",
                        "name": "q",
                        "type": "string",
                        "description": "Search string to filter results.  Matched against all fields."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "integer",
                        "description": "The maximum number of records to return.  Defaults to all."
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "type": "integer",
                        "description": "The record offset"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "type": "string",
                        "description": "Order by field.  One of: statusCode, method, url, time (default), or duration.",
                        "enum": [
                            "statusCode",
                            "method",
                            "url",
                            "time"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "description": "Sort direction ascending/descending.  One of: asc, desc (default).",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "in": "query",
                        "name": "field",
                        "type": "string",
                        "description": "The name of the field on which to filter.  One of: statusCode, method, url, time, or duration."
                    },
                    {
                        "in": "query",
                        "name": "op",
                        "type": "string",
                        "description": "The operation on which to apply to the filter.  See description."
                    },
                    {
                        "in": "query",
                        "name": "value",
                        "type": "string",
                        "description": "The value of the field on which to filter."
                    },
                    {
                        "in": "query",
                        "name": "lop",
                        "type": "string",
                        "description": "The logical operator that applies to all filters.  one of: or, and (default)."
                    }
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successfully deleted logs"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "deleteLogs",
                "tags": [
                    "logging"
                ],
                "summary": "Deletes all log entries."
            }
        },
        "/models": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Model"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getModels",
                "tags": [
                    "model"
                ],
                "summary": "Gets a list of Arrow Models"
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "createModel",
                "tags": [
                    "model"
                ],
                "summary": "Creates a new model",
                "parameters": [
                    {
                        "in": "body",
                        "name": "definition",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "model": {
                                    "$ref": "#/definitions/Model"
                                }
                            }
                        },
                        "description": "Arrow Model definition",
                        "required": true
                    }
                ]
            }
        },
        "/project/summary": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProjectSummary"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getProjectSummary",
                "tags": [
                    "project"
                ],
                "summary": "Get the project summary."
            }
        },
        "/system/config": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SystemConfig"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [],
                "operationId": "getSystemConfig",
                "tags": [
                    "system"
                ],
                "summary": "Gets the system configuration."
            }
        },
        "/system/status": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SystemStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [],
                "operationId": "getSystemStatus",
                "tags": [
                    "system"
                ],
                "summary": "Check the system is available."
            }
        },
        "/system/reload": {
            "get": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "reloadSystem",
                "tags": [
                    "system"
                ],
                "summary": "Reloads the server."
            }
        },
        "/timeline/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Timeline"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "getTimeline",
                "tags": [
                    "logging"
                ],
                "summary": "Gets an event timeline.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "The event id.",
                        "required": true
                    }
                ]
            }
        },
        "/test": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WrappedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "testapi",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the API to test.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WrappedRequest"
                        }
                    }
                ],
                "tags": [
                    "test"
                ],
                "summary": "Test the API."
            }
        }
    },
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic",
            "description": "Require authorized access to Arrow Admin APIs"
        }
    },
    "definitions": {
        "Status": {
            "type": "object",
            "description": "enabled status of the component and whether or not it has any errors",
            "required": [
                "enabled"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "errors": {
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "API": {
            "title": "API",
            "properties": {
                "generated": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "before": {},
                "after": {},
                "parameters": {
                    "type": "object"
                },
                "txenabled": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "sort": {
                    "type": "integer"
                },
                "response": {
                    "type": "object"
                },
                "singular": {
                    "type": "string"
                },
                "plural": {
                    "type": "string"
                },
                "pre": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "post": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nickname": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            },
            "required": [
                "group",
                "path",
                "method",
                "description",
                "enabled"
            ]
        },
        "GroupSummary": {
            "title": "GroupSummary",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endpointCount": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            },
            "required": [
                "id",
                "name",
                "endpointCount"
            ]
        },
        "Codeblock": {
            "title": "Codeblock",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "ServerConfiguration": {
            "title": "Server Configuration",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "content": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "envs"
            ]
        },
        "Connector": {
            "title": "Connector",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "description"
            ]
        },
        "Endpoints": {
            "type": "object",
            "description": "One or more Swagger (OpenAPI) specification documents"
        },
        "LogEntry": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "Model": {
            "title": "Model",
            "properties": {
                "name": {
                    "type": "string"
                },
                "fields": {
                    "type": "object"
                },
                "connector": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ]
                },
                "metadata": {
                    "type": "object"
                },
                "autogen": {
                    "type": "boolean"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disabledActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "plural": {
                    "type": "string"
                },
                "singular": {
                    "type": "string"
                },
                "cache": {
                    "type": "boolean"
                },
                "before": {},
                "after": {},
                "pre": {},
                "post": {},
                "before$METHOD$": {},
                "after$METHOD$": {},
                "beforeEvent": {
                    "type": "string"
                },
                "afterEvent": {
                    "type": "string"
                },
                "eventTransformer": {},
                "before$METHOD$Event": {},
                "after$METHOD$Event": {},
                "$METHOD$eventTransformer": {},
                "documented": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "createDescription": {},
                "updateDescription": {},
                "deleteDescription": {},
                "distinctDescription": {},
                "findByIDDescription": {},
                "findAndModifyDescription": {},
                "findAllDescription": {},
                "countDescription": {},
                "upsertDescription": {},
                "queryDescription": {}
            },
            "required": [
                "fields",
                "name"
            ]
        },
        "ProjectSummary": {
            "title": "Project Summary",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "apikey": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "SystemConfig": {
            "title": "System Configuration",
            "type": "object",
            "properties": {
                "productName": {
                    "type": "string"
                },
                "productVersion": {
                    "type": "string"
                },
                "platformServerUrl": {
                    "type": "string"
                },
                "apiPrefix": {
                    "type": "string"
                },
                "dateTimeFormat": {
                    "type": "string"
                }
            },
            "required": [
                "platformServerUrl"
            ]
        },
        "SystemStatus": {
            "title": "System Status",
            "type": "object",
            "properties": {
                "statusMessage": {
                    "type": "string"
                }
            },
            "required": [
                "statusMessage"
            ]
        },
        "Timeline": {
            "title": "Timeline",
            "type": "object",
            "properties": {
                "started": {
                    "type": "number",
                    "description": "The time (in msec) that the request started."
                },
                "req_id": {
                    "type": "string",
                    "description": "Unique request identifier"
                },
                "url": {
                    "type": "string",
                    "description": "The request URL"
                },
                "remote": {
                    "type": "string",
                    "description": "The remote host"
                },
                "request": {
                    "$ref": "#/definitions/TimelineEntry"
                },
                "response": {
                    "$ref": "#/definitions/TimelineEntry"
                },
                "timeline": {
                    "type": "object",
                    "properties": {
                        "beginServerDuration": {
                            "type": "number",
                            "description": "The time (in msec) processing the message prior to API access."
                        },
                        "endServerDuration": {
                            "type": "number",
                            "description": "The time (in msec) processing the message after to API access."
                        },
                        "totalDuration": {
                            "type": "number",
                            "description": "The server time (in msec) processing the request."
                        },
                        "timeline": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimelineEntry"
                            }
                        }
                    }
                }
            },
            "required": [
                "req_id",
                "started",
                "url",
                "request"
            ]
        },
        "TimelineEntry": {
            "title": "Timeline Entry",
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "server",
                        "model",
                        "api",
                        "connector",
                        "block"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "started": {
                    "type": "number"
                },
                "ended": {
                    "type": "number"
                },
                "detail": {
                    "type": "object",
                    "properties": {
                        "body": {
                            "type": "object"
                        },
                        "headers": {
                            "type": "object"
                        }
                    }
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "type"
            ]
        },
        "WrappedRequest": {
            "title": "Request Wrapper",
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "followRedirects": {
                    "type": "boolean"
                },
                "gzip": {
                    "type": "boolean"
                },
                "headers": {
                    "type": "object"
                },
                "params": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "object"
                        },
                        "query": {
                            "type": "object"
                        },
                        "body": {
                            "type": "object"
                        }
                    }
                }
            },
            "required": [
                "path",
                "method"
            ]
        },
        "WrappedResponse": {
            "title": "Response Wrapper",
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "type": "object"
                },
                "responseTime": {
                    "type": "integer"
                },
                "responseSize": {
                    "type": "integer"
                },
                "response": {
                    "type": "object",
                    "properties": {
                        "headers": {
                            "type": "object"
                        },
                        "httpVersion": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        },
                        "statusCode": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "statusCode"
                    ]
                }
            },
            "required": [
                "success",
                "response",
                "responseTime"
            ]
        }
    },
    "security": [
        {
            "basicAuth": []
        }
    ],
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ]
}

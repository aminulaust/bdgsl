'use strict';

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var _require = require('./util'),
    getModelParams = _require.getModelParams;

var createAPI = function createAPI(model) {
	return {
		version: '1',
		returns: {
			status: '$.status|0',
			headers: {
				location: '$.location|0'
			}
		},
		start: 'model.create',
		nodes: {
			'model.create': {
				type: 'ModelCreate',
				config: {
					model: '' + model.name
				},
				parameters: [].concat(_toConsumableArray(getModelParams(model))),
				response: {
					context: {
						'$|0': 'model'
					},
					routes: [{
						next: 'response.success'
					}]
				}
			},
			'response.success': {
				type: 'parametermap',
				config: {},
				parameters: [{
					name: 'data',
					value: '$.model.id|0'
				}, {
					name: 'status',
					default: 201
				}],
				response: {
					context: {
						'$.data|0': 'location',
						'$.status|0': 'status'
					},
					routes: [{
						next: null
					}]
				}
			}
		}
	};
};

exports = module.exports = createAPI;
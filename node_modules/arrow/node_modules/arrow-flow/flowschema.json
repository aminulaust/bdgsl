{
	"$schema" : "http://json-schema.org/draft-04/schema#",
	"id" : "http://axway.com/schemas/flowschema.json",
	"title" : "Flow Schema",
	"description" : "The schema for a Flow definition.",
	"type" : "object",
	"additionalProperties" : false,
	"definitions" : {
		"node" : {
			"description" : "The node instances.",
			"type" : "object",
			"additionalProperties" : false,
			"properties" : {
				"type" : {
					"description" : "The node type identifier.",
					"type" : "string"
				},
				"config" : {
					"description" : "Node specific configuration.",
					"type" : "object"
				},
				"parameters" : {
					"$ref" : "#/definitions/parameters"
				},
				"response" : {
					"$ref" : "#/definitions/response"
				}
			},
			"required" : [
				"type",
				"config",
				"parameters",
				"response"
			]
		},
		"parameters" : {
			"description" : "The list of input parameters for this node.",
			"type" : "array",
			"items" : {
				"$ref" : "#/definitions/parameter"
			}
		},
		"parameter" : {
			"description" : "The details of an input parameter.",
			"type" : "object",
			"additionalProperties" : false,
			"properties" : {
				"name" : {
					"description" : "The name of the parameter.",
					"type" : "string"
				},
				"value" : {
					"description" : "A JSONPath selector expression that gets evaluated against the context.",
					"type" : "string"
				},
				"default" : {
					"description" : "Fallback if value is not set or undefined."
				}
			},
			"anyOf" : [{
					"required" : [
						"name",
						"value"
					]
				}, {
					"required" : [
						"name",
						"default"
					]
				}
			]
		},
		"response" : {
			"description" : "Detail for handling the response of the node.",
			"type" : "object",
			"additionalProperties" : false,
			"properties" : {
				"context" : {
					"$ref" : "#/definitions/context"
				},
				"routes" : {
					"$ref" : "#/definitions/routes"
				}
			},
			"required" : [
				"context",
				"routes"
			]
		},
		"context" : {
			"description" : "Specifies the JSONPath to select from the response and the key to store it under in the context.",
			"additionalProperties" : {
				"oneOf" : [{
						"type" : "string"
					}, {
						"type" : "array",
						"items" : {
							"type" : "string"
						}
					}
				]
			}
		},
		"routes" : {
			"description" : "The list of routes. The first route with conditions that are met will be followed.",
			"type" : "array",
			"items" : {
				"$ref" : "#/definitions/route"
			}
		},
		"conditions" : {
			"description" : "A set of conditions to apply to a route.  All conditions must be true for the route to be considered a match.",
			"type" : "array",
			"items" : {
				"$ref" : "#/definitions/condition"
			}
		},
		"condition" : {
			"description": "A test to apply to an evaluated JSONPath from the node response.",
			"additionalProperties" : false,
			"properties" : {
				"key" : {
					"description": "JSONPath selector from the node response to be evaluated and tested against.",
					"type" : "string"
				},
				"exists" : {
					"description" : "A test if the key matches.",
					"type" : "boolean"
				},
				"eq" : {
					"description" : "A test if the key matches something which equals this value."
				},
				"ne" : {
					"description" : "A test if the key matches something which does not equal this value."
				},
				"lt" : {
					"description" : "A test if the key matches something which is less than this value."
				},
				"le" : {
					"description" : "A test if the key matches something which is less than or equal to this value."
				},
				"gt" : {
					"description" : "A test if the key matches something which is greater than this value."
				},
				"ge" : {
					"description" : "A test if the key matches something which is greater than or equal this value."
				}
			},
			"required": [
				"key"
			],
			"oneOf": [
				{"required" : ["exists"]},
				{"required" : ["eq"]},
				{"required" : ["ne"]},
				{"required" : ["lt"]},
				{"required" : ["le"]},
				{"required" : ["gt"]},
				{"required" : ["ge"]}
			]
		},
		"route" : {
			"description" : "A route selector which checks if optional conditions are met, and routes to the next node(s) if they match.",
			"type" : "object",
			"additionalProperties" : false,
			"properties" : {
				"conditions" : {
					"$ref" : "#/definitions/conditions"
				},
				"next" : {
					"description" : "The ID or array of IDs of the node(s) to be executed next. Can be null for terminal nodes.",
					"oneOf" : [{
							"type" : "array",
							"items" : {
								"type" : "string"
							}
						}, {
							"type" : "string"
						}, {
							"type" : "null"
						}
					]
				}
			},
			"required" : [
				"next"
			]
		}
	},
	"properties" : {
		"version" : {
			"description" : "The flow version.",
			"type" : "string",
			"enum" : ["1"]
		},
		"start" : {
			"description" : "The ID of the first node to be executed.",
			"type" : "string"
		},
		"returns" : {
			"description" : "A JSONPath evaluated against the final context and returned as the result of the flow.",
			"anyOf" : [{
					"type" : "string"
				}, {
					"type" : "object",
					"additionalProperties" : true
				}, {
					"type" : "null"
				}
			]
		},
		"nodes" : {
			"description" : "The instances of nodes used by the flow.",
			"type" : "object",
			"additionalProperties" : {
				"$ref" : "#/definitions/node"
			}
		}
	},
	"required" : [
		"version",
		"nodes",
		"start"
	]
}
